/data/xiachunwei/Projects/exebench/venv/lib/python3.11/site-packages/datasets/load.py:929: FutureWarning: The repository for exebench contains custom code which must be executed to correctly load the dataset. You can inspect the repository content at /data/xiachunwei/Datasets/exebench/exebench.py
You can avoid this message in future by passing the argument `trust_remote_code=True`.
Passing `trust_remote_code=True` will be mandatory to load this dataset from the next major release of `datasets`.
  warnings.warn(
Repo card metadata block was not found. Setting CardData to empty.
Load dataset
key: path, value: jmeberlein/osh/parse.c
key: func_def, value: void scrub(char *str) {
  int i, j, state = 1;
  for (i = j = 0; str[i] != '\0'; i++) {
    switch (state) {
    case 1:
      switch (str[i]) {
      case '\\':
        state = 2;
        continue;
      case '"':
        state = 5;
        continue;
      case '\'':
        state = 3;
        continue;
      default:
        str[j++] = str[i];
        state = 1;
        continue;
      }

    case 2:
      switch (str[i]) {
      default:
        str[j++] = str[i];
        state = 1;
        continue;
      }

    case 3:
      switch (str[i]) {
      case '\'':
        state = 1;
        continue;
      default:
        str[j++] = str[i];
        state = 3;
        continue;
      }

    case 4:
      switch (str[i]) {
      case '\\':
        state = 5;
        continue;
      case '"':
        state = 1;
        continue;
      default:
        str[j++] = str[i];
        state = 4;
        continue;
      }

    case 5:
      switch (str[i]) {
      case '"':
        state = 1;
        continue;
      default:
        str[j++] = str[i];
        state = 5;
        continue;
      }
    }
  }

  str[j] = '\0';
}
key: func_head, value: void scrub(char *str)
key: func_head_types, value: void scrub(char *str)
key: fname, value: scrub
key: signature, value: ['void', 'char *']
key: asm, value: {'target': ['real_gcc_x86_O0', 'real_gcc_x86_Os', 'real_gcc_x86_O3', 'real_gcc_arm_O0', 'real_gcc_arm_Os', 'real_gcc_arm_O3'], 'code': ['.globl scrub\n.type scrub, @function\nscrub:\n.LFB0:\n\t.cfi_startproc\n\tendbr64\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset 6, -16\n\tmovq\t%rsp, %rbp\n\t.cfi_def_cfa_register 6\n\tmovq\t%rdi, -24(%rbp)\n\tmovl\t$1, -4(%rbp)\n\tmovl\t$0, -8(%rbp)\n\tmovl\t-8(%rbp), %eax\n\tmovl\t%eax, -12(%rbp)\n\tjmp\t.L2\n.L18:\n\tcmpl\t$5, -4(%rbp)\n\tja\t.L3\n\tmovl\t-4(%rbp), %eax\n\tleaq\t0(,%rax,4), %rdx\n\tleaq\t.L5(%rip), %rax\n\tmovl\t(%rdx,%rax), %eax\n\tcltq\n\tleaq\t.L5(%rip), %rdx\n\taddq\t%rdx, %rax\n\tnotrack jmp\t*%rax\n\t.section\t.rodata\n\t.align 4\n\t.align 4\n.L5:\n\t.long\t.L3-.L5\n\t.long\t.L9-.L5\n\t.long\t.L8-.L5\n\t.long\t.L7-.L5\n\t.long\t.L6-.L5\n\t.long\t.L4-.L5\n\t.text\n.L9:\n\tmovl\t-12(%rbp), %eax\n\tmovslq\t%eax, %rdx\n\tmovq\t-24(%rbp), %rax\n\taddq\t%rdx, %rax\n\tmovzbl\t(%rax), %eax\n\tmovsbl\t%al, %eax\n\tcmpl\t$92, %eax\n\tje\t.L10\n\tcmpl\t$92, %eax\n\tjg\t.L11\n\tcmpl\t$34, %eax\n\tje\t.L12\n\tcmpl\t$39, %eax\n\tje\t.L13\n\tjmp\t.L11\n.L10:\n\tmovl\t$2, -4(%rbp)\n\tjmp\t.L3\n.L12:\n\tmovl\t$5, -4(%rbp)\n\tjmp\t.L3\n.L13:\n\tmovl\t$3, -4(%rbp)\n\tjmp\t.L3\n.L11:\n\tmovl\t-12(%rbp), %eax\n\tmovslq\t%eax, %rdx\n\tmovq\t-24(%rbp), %rax\n\tleaq\t(%rdx,%rax), %rcx\n\tmovl\t-8(%rbp), %eax\n\tleal\t1(%rax), %edx\n\tmovl\t%edx, -8(%rbp)\n\tmovslq\t%eax, %rdx\n\tmovq\t-24(%rbp), %rax\n\taddq\t%rax, %rdx\n\tmovzbl\t(%rcx), %eax\n\tmovb\t%al, (%rdx)\n\tmovl\t$1, -4(%rbp)\n\tjmp\t.L3\n.L8:\n\tmovl\t-12(%rbp), %eax\n\tmovslq\t%eax, %rdx\n\tmovq\t-24(%rbp), %rax\n\tleaq\t(%rdx,%rax), %rcx\n\tmovl\t-8(%rbp), %eax\n\tleal\t1(%rax), %edx\n\tmovl\t%edx, -8(%rbp)\n\tmovslq\t%eax, %rdx\n\tmovq\t-24(%rbp), %rax\n\taddq\t%rax, %rdx\n\tmovzbl\t(%rcx), %eax\n\tmovb\t%al, (%rdx)\n\tmovl\t$1, -4(%rbp)\n\tjmp\t.L3\n.L7:\n\tmovl\t-12(%rbp), %eax\n\tmovslq\t%eax, %rdx\n\tmovq\t-24(%rbp), %rax\n\taddq\t%rdx, %rax\n\tmovzbl\t(%rax), %eax\n\tmovsbl\t%al, %eax\n\tcmpl\t$39, %eax\n\tjne\t.L14\n\tmovl\t$1, -4(%rbp)\n\tjmp\t.L3\n.L14:\n\tmovl\t-12(%rbp), %eax\n\tmovslq\t%eax, %rdx\n\tmovq\t-24(%rbp), %rax\n\tleaq\t(%rdx,%rax), %rcx\n\tmovl\t-8(%rbp), %eax\n\tleal\t1(%rax), %edx\n\tmovl\t%edx, -8(%rbp)\n\tmovslq\t%eax, %rdx\n\tmovq\t-24(%rbp), %rax\n\taddq\t%rax, %rdx\n\tmovzbl\t(%rcx), %eax\n\tmovb\t%al, (%rdx)\n\tmovl\t$3, -4(%rbp)\n\tjmp\t.L3\n.L6:\n\tmovl\t-12(%rbp), %eax\n\tmovslq\t%eax, %rdx\n\tmovq\t-24(%rbp), %rax\n\taddq\t%rdx, %rax\n\tmovzbl\t(%rax), %eax\n\tmovsbl\t%al, %eax\n\tcmpl\t$34, %eax\n\tje\t.L15\n\tcmpl\t$92, %eax\n\tjne\t.L16\n\tmovl\t$5, -4(%rbp)\n\tjmp\t.L3\n.L15:\n\tmovl\t$1, -4(%rbp)\n\tjmp\t.L3\n.L16:\n\tmovl\t-12(%rbp), %eax\n\tmovslq\t%eax, %rdx\n\tmovq\t-24(%rbp), %rax\n\tleaq\t(%rdx,%rax), %rcx\n\tmovl\t-8(%rbp), %eax\n\tleal\t1(%rax), %edx\n\tmovl\t%edx, -8(%rbp)\n\tmovslq\t%eax, %rdx\n\tmovq\t-24(%rbp), %rax\n\taddq\t%rax, %rdx\n\tmovzbl\t(%rcx), %eax\n\tmovb\t%al, (%rdx)\n\tmovl\t$4, -4(%rbp)\n\tjmp\t.L3\n.L4:\n\tmovl\t-12(%rbp), %eax\n\tmovslq\t%eax, %rdx\n\tmovq\t-24(%rbp), %rax\n\taddq\t%rdx, %rax\n\tmovzbl\t(%rax), %eax\n\tmovsbl\t%al, %eax\n\tcmpl\t$34, %eax\n\tjne\t.L17\n\tmovl\t$1, -4(%rbp)\n\tjmp\t.L3\n.L17:\n\tmovl\t-12(%rbp), %eax\n\tmovslq\t%eax, %rdx\n\tmovq\t-24(%rbp), %rax\n\tleaq\t(%rdx,%rax), %rcx\n\tmovl\t-8(%rbp), %eax\n\tleal\t1(%rax), %edx\n\tmovl\t%edx, -8(%rbp)\n\tmovslq\t%eax, %rdx\n\tmovq\t-24(%rbp), %rax\n\taddq\t%rax, %rdx\n\tmovzbl\t(%rcx), %eax\n\tmovb\t%al, (%rdx)\n\tmovl\t$5, -4(%rbp)\n\tnop\n.L3:\n\taddl\t$1, -12(%rbp)\n.L2:\n\tmovl\t-12(%rbp), %eax\n\tmovslq\t%eax, %rdx\n\tmovq\t-24(%rbp), %rax\n\taddq\t%rdx, %rax\n\tmovzbl\t(%rax), %eax\n\ttestb\t%al, %al\n\tjne\t.L18\n\tmovl\t-8(%rbp), %eax\n\tmovslq\t%eax, %rdx\n\tmovq\t-24(%rbp), %rax\n\taddq\t%rdx, %rax\n\tmovb\t$0, (%rax)\n\tnop\n\tpopq\t%rbp\n\t.cfi_def_cfa 7, 8\n\tret\n\t.cfi_endproc\n\n', '.globl scrub\n.type scrub, @function\nscrub:\n.LFB0:\n\t.cfi_startproc\n\tendbr64\n\tmovq\t%rdi, %r8\n\tmovl\t$1, %edx\n\txorl\t%ecx, %ecx\n.L2:\n\tmovb\t(%r8), %al\n\tmovslq\t%ecx, %rsi\n\taddq\t%rdi, %rsi\n\ttestb\t%al, %al\n\tje\t.L20\n\tcmpl\t$4, %edx\n\tje\t.L3\n\tcmpl\t$5, %edx\n\tje\t.L4\n\tcmpl\t$2, %edx\n\tje\t.L5\n\tcmpl\t$3, %edx\n\tje\t.L6\n\tmovl\t$3, %edx\n\tcmpb\t$39, %al\n\tje\t.L7\n\tmovl\t$2, %edx\n\tcmpb\t$92, %al\n\tje\t.L7\n\tmovl\t$5, %edx\n\tcmpb\t$34, %al\n\tje\t.L7\n.L5:\n\tmovb\t%al, (%rsi)\n\tincl\t%ecx\n\tjmp\t.L15\n.L6:\n\tcmpb\t$39, %al\n\tjmp\t.L18\n.L3:\n\tcmpb\t$34, %al\n\tje\t.L15\n\tcmpb\t$92, %al\n\tje\t.L14\n\tjmp\t.L16\n.L4:\n\tcmpb\t$34, %al\n.L18:\n\tje\t.L15\n.L16:\n\tmovb\t%al, (%rsi)\n\tincl\t%ecx\n\tjmp\t.L7\n.L14:\n\tmovl\t$5, %edx\n\tjmp\t.L7\n.L15:\n\tmovl\t$1, %edx\n.L7:\n\tincq\t%r8\n\tjmp\t.L2\n.L20:\n\tmovb\t$0, (%rsi)\n\tret\n\t.cfi_endproc\n\n', '.globl scrub\n.type scrub, @function\nscrub:\n.LFB0:\n\t.cfi_startproc\n\tendbr64\n\tmovzbl\t(%rdi), %ecx\n\txorl\t%esi, %esi\n\txorl\t%eax, %eax\n\txorl\t%edx, %edx\n\ttestb\t%cl, %cl\n\tje\t.L30\n.L2:\n\tleaq\t1(%rdi,%rdx), %r9\n\tmovslq\t%esi, %rdx\n\tleal\t1(%rax), %r11d\n\tsubl\t%eax, %esi\n\tleaq\t(%rdi,%rdx), %r8\n\tleal\t(%rax,%rsi), %r10d\n\tmovq\t%r8, %rdx\n\tcmpb\t$39, %cl\n\tje\t.L4\n.L33:\n\tcmpb\t$92, %cl\n\tje\t.L5\n\tcmpb\t$34, %cl\n\tje\t.L31\n\tmovb\t%cl, (%r8)\n\tmovzbl\t(%r9), %ecx\n\tleal\t(%r11,%rsi), %eax\n\taddq\t$1, %r9\n\tleaq\t1(%r8), %r8\n\ttestb\t%cl, %cl\n\tje\t.L32\n\tmovl\t%r11d, %eax\n\tmovq\t%r8, %rdx\n\tleal\t(%rax,%rsi), %r10d\n\tleal\t1(%rax), %r11d\n\tcmpb\t$39, %cl\n\tjne\t.L33\n\t.p2align 4,,10\n\t.p2align 3\n.L4:\n\tmovzbl\t(%r9), %ecx\n\ttestb\t%cl, %cl\n\tje\t.L3\n\tmovslq\t%r11d, %r11\n\tmovslq\t%r10d, %r9\n\tleal\t2(%rax), %r8d\n\tmovl\t%r10d, %esi\n\tleaq\t1(%rdi,%r11), %r11\n\taddq\t%rdi, %r9\n\tsubl\t%r10d, %r8d\n.L12:\n\tmovq\t%r9, %rdx\n\tleal\t(%r8,%rsi), %eax\n\tcmpb\t$39, %cl\n\tje\t.L11\n\tmovb\t%cl, (%r9)\n\tmovzbl\t(%r11), %ecx\n\taddl\t$1, %esi\n\taddq\t$1, %r11\n\tleaq\t1(%r9), %r9\n\ttestb\t%cl, %cl\n\tjne\t.L12\n.L27:\n\tmovslq\t%esi, %rdx\n\taddq\t%rdi, %rdx\n.L3:\n\tmovb\t$0, (%rdx)\n\tret\n\t.p2align 4,,10\n\t.p2align 3\n.L31:\n\tmovzbl\t(%r9), %ecx\n\ttestb\t%cl, %cl\n\tje\t.L3\n\tleal\t2(%rax), %r8d\n\tmovslq\t%r10d, %r9\n\tmovslq\t%r11d, %r11\n\tmovl\t%r10d, %esi\n\taddq\t%rdi, %r9\n\tsubl\t%r10d, %r8d\n\tleaq\t1(%rdi,%r11), %r11\n\tmovq\t%r9, %rdx\n\tleal\t(%r8,%rsi), %eax\n\tcmpb\t$34, %cl\n\tje\t.L11\n.L34:\n\tmovb\t%cl, (%r9)\n\tmovzbl\t(%r11), %ecx\n\taddl\t$1, %esi\n\tleaq\t1(%r9), %r9\n\taddq\t$1, %r11\n\ttestb\t%cl, %cl\n\tje\t.L27\n\tmovq\t%r9, %rdx\n\tleal\t(%r8,%rsi), %eax\n\tcmpb\t$34, %cl\n\tjne\t.L34\n.L11:\n\tmovzbl\t(%r11), %ecx\n\ttestb\t%cl, %cl\n\tje\t.L3\n\tmovslq\t%eax, %rdx\n\tjmp\t.L2\n\t.p2align 4,,10\n\t.p2align 3\n.L5:\n\tmovzbl\t(%r9), %ecx\n\ttestb\t%cl, %cl\n\tje\t.L3\n\taddl\t$2, %eax\n\tmovb\t%cl, (%r8)\n\tleal\t1(%r10), %esi\n\tmovslq\t%eax, %rdx\n\tmovzbl\t(%rdi,%rdx), %ecx\n\ttestb\t%cl, %cl\n\tjne\t.L2\n\tjmp\t.L27\n\t.p2align 4,,10\n\t.p2align 3\n.L30:\n\tmovq\t%rdi, %rdx\n\tmovb\t$0, (%rdx)\n\tret\n.L32:\n\tcltq\n\tleaq\t(%rdi,%rax), %rdx\n\tjmp\t.L3\n\t.cfi_endproc\n\n', '.global scrub\n.type scrub, %function\nscrub:\n.LFB0:\n\t.cfi_startproc\n\tsub\tsp, sp, #32\n\t.cfi_def_cfa_offset 32\n\tstr\tx0, [sp, 8]\n\tmov\tw0, 1\n\tstr\tw0, [sp, 28]\n\tstr\twzr, [sp, 24]\n\tldr\tw0, [sp, 24]\n\tstr\tw0, [sp, 20]\n\tb\t.L2\n.L17:\n\tldr\tw0, [sp, 28]\n\tcmp\tw0, 5\n\tbeq\t.L3\n\tldr\tw0, [sp, 28]\n\tcmp\tw0, 5\n\tbgt\t.L4\n\tldr\tw0, [sp, 28]\n\tcmp\tw0, 4\n\tbeq\t.L5\n\tldr\tw0, [sp, 28]\n\tcmp\tw0, 4\n\tbgt\t.L4\n\tldr\tw0, [sp, 28]\n\tcmp\tw0, 3\n\tbeq\t.L6\n\tldr\tw0, [sp, 28]\n\tcmp\tw0, 3\n\tbgt\t.L4\n\tldr\tw0, [sp, 28]\n\tcmp\tw0, 1\n\tbeq\t.L7\n\tldr\tw0, [sp, 28]\n\tcmp\tw0, 2\n\tbeq\t.L8\n\tb\t.L4\n.L7:\n\tldrsw\tx0, [sp, 20]\n\tldr\tx1, [sp, 8]\n\tadd\tx0, x1, x0\n\tldrb\tw0, [x0]\n\tcmp\tw0, 92\n\tbeq\t.L9\n\tcmp\tw0, 92\n\tbgt\t.L10\n\tcmp\tw0, 34\n\tbeq\t.L11\n\tcmp\tw0, 39\n\tbeq\t.L12\n\tb\t.L10\n.L9:\n\tmov\tw0, 2\n\tstr\tw0, [sp, 28]\n\tb\t.L4\n.L11:\n\tmov\tw0, 5\n\tstr\tw0, [sp, 28]\n\tb\t.L4\n.L12:\n\tmov\tw0, 3\n\tstr\tw0, [sp, 28]\n\tb\t.L4\n.L10:\n\tldrsw\tx0, [sp, 20]\n\tldr\tx1, [sp, 8]\n\tadd\tx1, x1, x0\n\tldr\tw0, [sp, 24]\n\tadd\tw2, w0, 1\n\tstr\tw2, [sp, 24]\n\tsxtw\tx0, w0\n\tldr\tx2, [sp, 8]\n\tadd\tx0, x2, x0\n\tldrb\tw1, [x1]\n\tstrb\tw1, [x0]\n\tmov\tw0, 1\n\tstr\tw0, [sp, 28]\n\tb\t.L4\n.L8:\n\tldrsw\tx0, [sp, 20]\n\tldr\tx1, [sp, 8]\n\tadd\tx1, x1, x0\n\tldr\tw0, [sp, 24]\n\tadd\tw2, w0, 1\n\tstr\tw2, [sp, 24]\n\tsxtw\tx0, w0\n\tldr\tx2, [sp, 8]\n\tadd\tx0, x2, x0\n\tldrb\tw1, [x1]\n\tstrb\tw1, [x0]\n\tmov\tw0, 1\n\tstr\tw0, [sp, 28]\n\tb\t.L4\n.L6:\n\tldrsw\tx0, [sp, 20]\n\tldr\tx1, [sp, 8]\n\tadd\tx0, x1, x0\n\tldrb\tw0, [x0]\n\tcmp\tw0, 39\n\tbne\t.L13\n\tmov\tw0, 1\n\tstr\tw0, [sp, 28]\n\tb\t.L4\n.L13:\n\tldrsw\tx0, [sp, 20]\n\tldr\tx1, [sp, 8]\n\tadd\tx1, x1, x0\n\tldr\tw0, [sp, 24]\n\tadd\tw2, w0, 1\n\tstr\tw2, [sp, 24]\n\tsxtw\tx0, w0\n\tldr\tx2, [sp, 8]\n\tadd\tx0, x2, x0\n\tldrb\tw1, [x1]\n\tstrb\tw1, [x0]\n\tmov\tw0, 3\n\tstr\tw0, [sp, 28]\n\tb\t.L4\n.L5:\n\tldrsw\tx0, [sp, 20]\n\tldr\tx1, [sp, 8]\n\tadd\tx0, x1, x0\n\tldrb\tw0, [x0]\n\tcmp\tw0, 34\n\tbeq\t.L14\n\tcmp\tw0, 92\n\tbne\t.L15\n\tmov\tw0, 5\n\tstr\tw0, [sp, 28]\n\tb\t.L4\n.L14:\n\tmov\tw0, 1\n\tstr\tw0, [sp, 28]\n\tb\t.L4\n.L15:\n\tldrsw\tx0, [sp, 20]\n\tldr\tx1, [sp, 8]\n\tadd\tx1, x1, x0\n\tldr\tw0, [sp, 24]\n\tadd\tw2, w0, 1\n\tstr\tw2, [sp, 24]\n\tsxtw\tx0, w0\n\tldr\tx2, [sp, 8]\n\tadd\tx0, x2, x0\n\tldrb\tw1, [x1]\n\tstrb\tw1, [x0]\n\tmov\tw0, 4\n\tstr\tw0, [sp, 28]\n\tb\t.L4\n.L3:\n\tldrsw\tx0, [sp, 20]\n\tldr\tx1, [sp, 8]\n\tadd\tx0, x1, x0\n\tldrb\tw0, [x0]\n\tcmp\tw0, 34\n\tbne\t.L16\n\tmov\tw0, 1\n\tstr\tw0, [sp, 28]\n\tb\t.L4\n.L16:\n\tldrsw\tx0, [sp, 20]\n\tldr\tx1, [sp, 8]\n\tadd\tx1, x1, x0\n\tldr\tw0, [sp, 24]\n\tadd\tw2, w0, 1\n\tstr\tw2, [sp, 24]\n\tsxtw\tx0, w0\n\tldr\tx2, [sp, 8]\n\tadd\tx0, x2, x0\n\tldrb\tw1, [x1]\n\tstrb\tw1, [x0]\n\tmov\tw0, 5\n\tstr\tw0, [sp, 28]\n\tnop\n.L4:\n\tldr\tw0, [sp, 20]\n\tadd\tw0, w0, 1\n\tstr\tw0, [sp, 20]\n.L2:\n\tldrsw\tx0, [sp, 20]\n\tldr\tx1, [sp, 8]\n\tadd\tx0, x1, x0\n\tldrb\tw0, [x0]\n\tcmp\tw0, 0\n\tbne\t.L17\n\tldrsw\tx0, [sp, 24]\n\tldr\tx1, [sp, 8]\n\tadd\tx0, x1, x0\n\tstrb\twzr, [x0]\n\tnop\n\tadd\tsp, sp, 32\n\t.cfi_def_cfa_offset 0\n\tret\n\t.cfi_endproc\n\n', '.global scrub\n.type scrub, %function\nscrub:\n.LFB0:\n\t.cfi_startproc\n\tadrp\tx6, .L5\n\tmov\tx5, x0\n\tadd\tx6, x6, :lo12:.L5\n\tmov\tw3, 1\n\tmov\tw2, 0\n.L2:\n\tldrb\tw1, [x5]\n\tsxtw\tx4, w2\n\tadd\tx7, x0, x2, sxtw\n\tcbnz\tw1, .L10\n\tstrb\twzr, [x7]\n\tret\n.L10:\n\tsub\tw7, w3, #2\n\tcmp\tw7, 3\n\tbhi\t.L3\n\tldrb\tw7, [x6,w7,uxtw]\n\tadr\tx8, .Lrtx5\n\tadd\tx7, x8, w7, sxtb #2\n\tbr\tx7\n.Lrtx5:\n\t.section\t.rodata\n\t.align\t0\n\t.align\t2\n.L5:\n\t.byte\t(.L8 - .Lrtx5) / 4\n\t.byte\t(.L7 - .Lrtx5) / 4\n\t.byte\t(.L6 - .Lrtx5) / 4\n\t.byte\t(.L4 - .Lrtx5) / 4\n\t.text\n.L3:\n\tcmp\tw1, 39\n\tbeq\t.L11\n\tcmp\tw1, 92\n\tbeq\t.L12\n\tcmp\tw1, 34\n\tbeq\t.L16\n.L8:\n\tadd\tw2, w2, 1\n\tstrb\tw1, [x0, x4]\n.L17:\n\tmov\tw3, 1\n\tb\t.L9\n.L7:\n\tcmp\tw1, 39\n.L20:\n\tbne\t.L18\n\tb\t.L17\n.L6:\n\tcmp\tw1, 34\n\tbeq\t.L17\n\tcmp\tw1, 92\n\tbeq\t.L16\n.L18:\n\tadd\tw2, w2, 1\n\tstrb\tw1, [x0, x4]\n.L9:\n\tadd\tx5, x5, 1\n\tb\t.L2\n.L4:\n\tcmp\tw1, 34\n\tb\t.L20\n.L11:\n\tmov\tw3, 3\n\tb\t.L9\n.L12:\n\tmov\tw3, 2\n\tb\t.L9\n.L16:\n\tmov\tw3, 5\n\tb\t.L9\n\t.cfi_endproc\n\n', '.global scrub\n.type scrub, %function\nscrub:\n.LFB0:\n\t.cfi_startproc\n\tldrb\tw3, [x0]\n\tmov\tx5, x0\n\tmov\tw4, 0\n\tmov\tw2, 0\n\tmov\tx1, 0\n\tcbz\tw3, .L3\n.L2:\n\tadd\tx1, x1, 1\n\tsxtw\tx6, w4\n\tadd\tx1, x0, x1\n.L9:\n\tcmp\tw3, 39\n\tmov\tw4, w6\n\tadd\tx5, x0, x6\n\tadd\tw8, w2, 1\n\tbeq\t.L4\n\tcmp\tw3, 92\n\tbeq\t.L5\n\tcmp\tw3, 34\n\tbeq\t.L29\n\tstrb\tw3, [x0, x6]\n\tadd\tw7, w6, 1\n\tmov\tw2, w8\n\tadd\tx6, x6, 1\n\tldrb\tw3, [x1], 1\n\tcbnz\tw3, .L9\n\tadd\tx5, x0, x7, sxtw\n.L3:\n\tstrb\twzr, [x5]\n\tret\n\t.p2align 2,,3\n.L29:\n\tldrb\tw3, [x1]\n\tcbz\tw3, .L3\n\tadd\tw2, w2, 2\n\tadd\tx6, x0, x4, sxtw\n\tsxtw\tx1, w2\n.L14:\n\tcmp\tw3, 34\n\tmov\tx5, x6\n\tmov\tw2, w1\n\tadd\tx7, x0, x1\n\tbeq\t.L11\n\tstrb\tw3, [x6]\n\tadd\tw4, w4, 1\n\tadd\tx6, x6, 1\n\tldrb\tw3, [x0, x1]\n\tadd\tx1, x1, 1\n\tcbnz\tw3, .L14\n\tadd\tx5, x0, x4, sxtw\n.L30:\n\tstrb\twzr, [x5]\n\tret\n\t.p2align 2,,3\n.L11:\n\tldrb\tw3, [x7]\n\tcbz\tw3, .L3\n\tsxtw\tx1, w2\n\tb\t.L2\n\t.p2align 2,,3\n.L5:\n\tldrb\tw1, [x1]\n\tcbz\tw1, .L3\n\tadd\tw2, w2, 2\n\tstrb\tw1, [x5]\n\tadd\tw4, w6, 1\n\tsxtw\tx1, w2\n\tldrb\tw3, [x0, w2, sxtw]\n\tcbnz\tw3, .L2\n\tadd\tx5, x0, x4, sxtw\n\tb\t.L30\n\t.p2align 2,,3\n.L4:\n\tldrb\tw3, [x1]\n\tcbz\tw3, .L3\n\tadd\tw2, w2, 2\n\tadd\tx6, x0, x4, sxtw\n\tsxtw\tx1, w2\n.L12:\n\tcmp\tw3, 39\n\tmov\tx5, x6\n\tmov\tw2, w1\n\tadd\tx7, x0, x1\n\tbeq\t.L11\n\tstrb\tw3, [x6]\n\tadd\tw4, w4, 1\n\tadd\tx6, x6, 1\n\tldrb\tw3, [x0, x1]\n\tadd\tx1, x1, 1\n\tcbnz\tw3, .L12\n\tadd\tx5, x0, x4, sxtw\n\tb\t.L30\n\t.cfi_endproc\n\n']}
key: synth_deps, value: None
key: real_deps, value: 
# 1 
key: synth_io_pairs, value: None
key: real_io_pairs, value: {'input': [{'var': ['str'], 'value': ['"fkuqorxewnbwtaxqzlb"']}, {'var': ['str'], 'value': ['"gllskmgjtxquqw"']}, {'var': ['str'], 'value': ['"dzjjlaehriutyg"']}, {'var': ['str'], 'value': ['"ynstjnoswtugsliwkikljstp"']}, {'var': ['str'], 'value': ['"uyjlereqavtrlfovxxezkxjoxrg"']}, {'var': ['str'], 'value': ['"omrplwjlfwfthbsodnhnnugcgw"']}, {'var': ['str'], 'value': ['"dlwvyrduta"']}, {'var': ['str'], 'value': ['"ccqfkhxqwsgthlwycpkzufxa"']}, {'var': ['str'], 'value': ['""']}, {'var': ['str'], 'value': ['"bohaydwtuqfshmj"']}], 'output': [{'var': ['str'], 'value': ['"fkuqorxewnbwtaxqzlb"']}, {'var': ['str'], 'value': ['"gllskmgjtxquqw"']}, {'var': ['str'], 'value': ['"dzjjlaehriutyg"']}, {'var': ['str'], 'value': ['"ynstjnoswtugsliwkikljstp"']}, {'var': ['str'], 'value': ['"uyjlereqavtrlfovxxezkxjoxrg"']}, {'var': ['str'], 'value': ['"omrplwjlfwfthbsodnhnnugcgw"']}, {'var': ['str'], 'value': ['"dlwvyrduta"']}, {'var': ['str'], 'value': ['"ccqfkhxqwsgthlwycpkzufxa"']}, {'var': ['str'], 'value': ['""']}, {'var': ['str'], 'value': ['"bohaydwtuqfshmj"']}], 'dummy_funcs': [None, None, None, None, None, None, None, None, None, None], 'dummy_funcs_seed': [None, None, None, None, None, None, None, None, None, None]}
key: synth_exe_wrapper, value: None
key: real_exe_wrapper, value: extern "C" {
#include "/tmp/pytmpfile_2d0c40262005_29kmme4dos.c"
}

#include <vector>
#include <nlohmann/json.hpp>
#include <fstream>
#include <iomanip>
#include <clib/synthesizer.h>
#include <time.h>
#include <math.h>
#include <iostream>
char* output_file;
char* pre_accel_dump_file;  // optional dump file.
using json = nlohmann::json;
const char* __asan_default_options() {
  return "detect_leaks=0";
}

clock_t AcceleratorStart;
clock_t AcceleratorTotalNanos = 0;
void StartAcceleratorTimer() {
  AcceleratorStart = clock();
}

void StopAcceleratorTimer() {
  AcceleratorTotalNanos += (clock()) - AcceleratorStart;
}

void write_output(char* str) {
  json output_json;

  output_json["str"] = str;
  std::ofstream out_str(output_file);
  out_str << std::setw(4) << output_json << std::endl;
}
int main(int argc, char** argv) {
  char* inpname = argv[1];
  output_file = argv[2];

  std::ifstream ifs(inpname);
  json input_json = json::parse(ifs);
  char* str = strdup(input_json["str"].get<std::string>().c_str());
  clock_t begin = clock();
  scrub(str);
  clock_t end = clock();
  std::cout << "Time: " << (double)(end - begin) / CLOCKS_PER_SEC << std::endl;
  std::cout << "AccTime: " << (double)AcceleratorTotalNanos / CLOCKS_PER_SEC << std::endl;
  write_output(str);
}
key: ref, value: master
key: synth_iospec, value: null
key: real_iospec, value: {"livein": ["str"], "liveout": ["str"], "returnvarname": [], "execcmd": "", "funname": "scrub", "funargs": ["str"], "typemap": {"str": "string"}, "required_includes": ["/tmp/pytmpfile_2d0c40262005_29kmme4dos.c"], "classmap": {}, "range": {}, "needs_cast": {}, "globals": []}
********************
c_deps: 
# 1 
#define bool char

func_def: void scrub(char *str) {
  int i, j, state = 1;
  for (i = j = 0; str[i] != '\0'; i++) {
    switch (state) {
    case 1:
      switch (str[i]) {
      case '\\':
        state = 2;
        continue;
      case '"':
        state = 5;
        continue;
      case '\'':
        state = 3;
        continue;
      default:
        str[j++] = str[i];
        state = 1;
        continue;
      }

    case 2:
      switch (str[i]) {
      default:
        str[j++] = str[i];
        state = 1;
        continue;
      }

    case 3:
      switch (str[i]) {
      case '\'':
        state = 1;
        continue;
      default:
        str[j++] = str[i];
        state = 3;
        continue;
      }

    case 4:
      switch (str[i]) {
      case '\\':
        state = 5;
        continue;
      case '"':
        state = 1;
        continue;
      default:
        str[j++] = str[i];
        state = 4;
        continue;
      }

    case 5:
      switch (str[i]) {
      case '"':
        state = 1;
        continue;
      default:
        str[j++] = str[i];
        state = 5;
        continue;
      }
    }
  }

  str[j] = '\0';
}
********************
1
